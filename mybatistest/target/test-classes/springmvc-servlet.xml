<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
       ">


	<!-- 启用spring mvc 注解 -->
	<context:annotation-config />

	<mvc:annotation-driven />
	<!-- 作用：会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 
		两个bean,是spring MVC为@Controllers分发请求所必须的。 并提供了：数据绑定支持，@NumberFormatannotation支持，@DateTimeFormat支持，@Valid支持， 
		读写XML的支持（JAXB），读写JSON的支持（Jackson）。 -->


	<!-- 设置使用注解的类所在的jar包 -->
	<context:component-scan base-package="mybatistest"></context:component-scan>
	<!-- 作用：是对包进行扫描，实现注释驱动Bean定义，同时将bean自动注入容器中使用。 解决了bean的注入和使用 -->

	<!-- Spring3.1前的方式 完成请求和注解POJO的映射 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" 
		/> -->

	<!--Spring3.1开始的注解 HandlerMapping -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	<!--Spring3.1开始的注解 HandlerAdapter -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" />

	<!-- JSON -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!-- 设置为true以忽略对Accept Header的支持 -->
		<property name="ignoreAcceptHeader" value="true" />
		<!-- 在没有扩展名时即: "/user/1" 时的默认展现形式 -->
		<property name="defaultContentType" value="text/html" />
		<property name="mediaTypes">
			<map>
				<!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
				<!-- 告诉视图解析器，返回的类型为json格式 application/json -->
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
			</map>
		</property>
		<!-- 用于开启 /userinfo/123?format=json 的支持 -->
		<property name="favorParameter" value="false" />

		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass"
						value="org.springframework.web.servlet.view.JstlView"></property>
					<property name="prefix" value="/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>

		<property name="defaultViews">
			<list>
				<!-- ModelAndView里的数据变成JSON -->
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
				<!-- XML -->
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller">
						<bean class="org.springframework.oxm.xstream.XStreamMarshaller" />
					</property>
				</bean>

			</list>
		</property>
	</bean>



	<!-- 拦截器 -->

	<mvc:interceptors>
		<!-- 多个拦截器,顺序执行 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" /><!-- 如果不配置或/**,将拦截所有的Controller -->
			<bean class="mybatistest.controller.CommonInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

</beans>