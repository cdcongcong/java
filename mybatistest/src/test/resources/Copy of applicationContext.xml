<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
http://www.springframework.org/schema/context  
http://www.springframework.org/schema/context/spring-context-3.0.xsd  
http://www.springframework.org/schema/mvc  
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
">
	<!-- <context:component-scan base-package="mybatistest" /> <context:property-placeholder 
		location="classpath:jdbc.properties" /> -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<!--<property name="driverClassName" value="${jdbc.driver}" /> <property 
			name="url" value="${jdbc.url}" /> <property name="username" value="${jdbc.username}" 
			/> <property name="password" value="${jdbc.password}" /> -->
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:XE" />
		<property name="username" value="MyBatis" />
		<property name="password" value="MyBatis" />


	</bean>
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-configuration.xml" />

	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>


	<bean id="userDaoImpl" class="mybatistest.dao.impl.UserDaoImpl">
		<!--注入SqlSessionTemplate实例 -->
		<property name="sqlSessionTemplate" ref="sqlSession" />
		<!--也可直接注入SqlSessionFactory实例，二者都指定时，SqlSessionFactory失效 -->
		<!-- <property name="sqlSessionFactory" ref="sqlSessionFactory" /> -->
	</bean>

	<bean id="userServiceImpl" class="mybatistest.service.impl.UserServiceImpl">
		<property name="mainDao" ref="userDaoImpl" />
	</bean>


	<!-- 使用注解支持事务 -->
	 <tx:annotation-driven transaction-manager="transactionManager" /> 
	<!-- 添加jdbc的任务管理器 -->

	<!-- 配置事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- name表示以什么开始的方法名，比如 add*表示add开头的方法 propagation表示事务传播属性，不写默认有 -->
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="del*" />
			<tx:method name="update*" />
			<tx:method name="find*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- 配置事务切面 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.yjw.service..*.*(..))"
			id="pointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
	</aop:config>

</beans>
