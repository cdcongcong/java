<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mybatistest.client.SCUserMapper" >
  <resultMap id="BaseResultMap" type="mybatistest.entity.SCUser" >
    <id column="USERID" property="userID" jdbcType="VARCHAR" />
    <result column="ORDERNO" property="orderNo" jdbcType="DECIMAL" />
    <result column="USERNO" property="userno" jdbcType="VARCHAR" />
    <result column="USERNAME" property="username" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="DEPARTMENTID" property="departmentid" jdbcType="VARCHAR" />
    <result column="EMPLOYEEID" property="employeeid" jdbcType="VARCHAR" />
    <result column="PARTNERID" property="partnerid" jdbcType="VARCHAR" />
    <result column="MOBILENUMBER" property="mobilenumber" jdbcType="VARCHAR" />
    <result column="EMAILADDRESS" property="emailaddress" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="LOCKED" property="locked" jdbcType="VARCHAR" />
    <result column="LASTLOGIN" property="lastlogin" jdbcType="DATE" />
    <result column="LASTPWDSET" property="lastpwdset" jdbcType="DATE" />
    <result column="PWDEXDATE" property="pwdexdate" jdbcType="DATE" />
    <result column="CREATEUSERID" property="createuserid" jdbcType="VARCHAR" />
    <result column="CREATEDATE" property="createdate" jdbcType="DATE" />
    <result column="UPDATEUSERID" property="updateuserid" jdbcType="VARCHAR" />
    <result column="UPDATEDATE" property="updatedate" jdbcType="DATE" />
    <result column="OWNERUSERID" property="owneruserid" jdbcType="VARCHAR" />
    <result column="OWNERDEPARTMENTID" property="ownerdepartmentid" jdbcType="VARCHAR" />
    <result column="IM" property="im" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    USERID, ORDERNO, USERNO, USERNAME, PASSWORD, DEPARTMENTID, EMPLOYEEID, PARTNERID, 
    MOBILENUMBER, EMAILADDRESS, REMARK, LOCKED, LASTLOGIN, LASTPWDSET, PWDEXDATE, CREATEUSERID, 
    CREATEDATE, UPDATEUSERID, UPDATEDATE, OWNERUSERID, OWNERDEPARTMENTID, IM
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="mybatistest.entity.SCUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SCUSERS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from SCUSERS
    where USERID = #{userID,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from SCUSERS
    where USERID = #{userID,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="mybatistest.entity.SCUserExample" >
    delete from SCUSERS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="mybatistest.entity.SCUser" useGeneratedKeys="true" keyProperty="userID" >
    insert into SCUSERS (ORDERNO, USERNO, USERNAME, 
      PASSWORD, DEPARTMENTID, EMPLOYEEID, 
      PARTNERID, MOBILENUMBER, EMAILADDRESS, 
      REMARK, LOCKED, LASTLOGIN, 
      LASTPWDSET, PWDEXDATE, CREATEUSERID, 
      CREATEDATE, UPDATEUSERID, UPDATEDATE, 
      OWNERUSERID, OWNERDEPARTMENTID, IM
      )
    values (#{orderNo,jdbcType=DECIMAL}, #{userno,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{departmentid,jdbcType=VARCHAR}, #{employeeid,jdbcType=VARCHAR}, 
      #{partnerid,jdbcType=VARCHAR}, #{mobilenumber,jdbcType=VARCHAR}, #{emailaddress,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{locked,jdbcType=VARCHAR}, #{lastlogin,jdbcType=DATE}, 
      #{lastpwdset,jdbcType=DATE}, #{pwdexdate,jdbcType=DATE}, #{createuserid,jdbcType=VARCHAR}, 
      #{createdate,jdbcType=DATE}, #{updateuserid,jdbcType=VARCHAR}, #{updatedate,jdbcType=DATE}, 
      #{owneruserid,jdbcType=VARCHAR}, #{ownerdepartmentid,jdbcType=VARCHAR}, #{im,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="mybatistest.entity.SCUser" useGeneratedKeys="true" keyProperty="userID" >
    insert into SCUSERS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      ORDERNO,
      <if test="userno != null" >
        USERNO,
      </if>
      <if test="username != null" >
        USERNAME,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="departmentid != null" >
        DEPARTMENTID,
      </if>
      <if test="employeeid != null" >
        EMPLOYEEID,
      </if>
      <if test="partnerid != null" >
        PARTNERID,
      </if>
      <if test="mobilenumber != null" >
        MOBILENUMBER,
      </if>
      <if test="emailaddress != null" >
        EMAILADDRESS,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="locked != null" >
        LOCKED,
      </if>
      <if test="lastlogin != null" >
        LASTLOGIN,
      </if>
      <if test="lastpwdset != null" >
        LASTPWDSET,
      </if>
      <if test="pwdexdate != null" >
        PWDEXDATE,
      </if>
      <if test="createuserid != null" >
        CREATEUSERID,
      </if>
      <if test="createdate != null" >
        CREATEDATE,
      </if>
      <if test="updateuserid != null" >
        UPDATEUSERID,
      </if>
      <if test="updatedate != null" >
        UPDATEDATE,
      </if>
      <if test="owneruserid != null" >
        OWNERUSERID,
      </if>
      <if test="ownerdepartmentid != null" >
        OWNERDEPARTMENTID,
      </if>
      <if test="im != null" >
        IM,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{orderNo,jdbcType=DECIMAL},
      <if test="userno != null" >
        #{userno,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null" >
        #{departmentid,jdbcType=VARCHAR},
      </if>
      <if test="employeeid != null" >
        #{employeeid,jdbcType=VARCHAR},
      </if>
      <if test="partnerid != null" >
        #{partnerid,jdbcType=VARCHAR},
      </if>
      <if test="mobilenumber != null" >
        #{mobilenumber,jdbcType=VARCHAR},
      </if>
      <if test="emailaddress != null" >
        #{emailaddress,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="locked != null" >
        #{locked,jdbcType=VARCHAR},
      </if>
      <if test="lastlogin != null" >
        #{lastlogin,jdbcType=DATE},
      </if>
      <if test="lastpwdset != null" >
        #{lastpwdset,jdbcType=DATE},
      </if>
      <if test="pwdexdate != null" >
        #{pwdexdate,jdbcType=DATE},
      </if>
      <if test="createuserid != null" >
        #{createuserid,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=DATE},
      </if>
      <if test="updateuserid != null" >
        #{updateuserid,jdbcType=VARCHAR},
      </if>
      <if test="updatedate != null" >
        #{updatedate,jdbcType=DATE},
      </if>
      <if test="owneruserid != null" >
        #{owneruserid,jdbcType=VARCHAR},
      </if>
      <if test="ownerdepartmentid != null" >
        #{ownerdepartmentid,jdbcType=VARCHAR},
      </if>
      <if test="im != null" >
        #{im,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="mybatistest.entity.SCUserExample" resultType="java.lang.Integer" >
    select count(*) from SCUSERS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update SCUSERS
    <set >
      <if test="record.userID != null" >
        USERID = #{record.userID,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null" >
        ORDERNO = #{record.orderNo,jdbcType=DECIMAL},
      </if>
      <if test="record.userno != null" >
        USERNO = #{record.userno,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentid != null" >
        DEPARTMENTID = #{record.departmentid,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeid != null" >
        EMPLOYEEID = #{record.employeeid,jdbcType=VARCHAR},
      </if>
      <if test="record.partnerid != null" >
        PARTNERID = #{record.partnerid,jdbcType=VARCHAR},
      </if>
      <if test="record.mobilenumber != null" >
        MOBILENUMBER = #{record.mobilenumber,jdbcType=VARCHAR},
      </if>
      <if test="record.emailaddress != null" >
        EMAILADDRESS = #{record.emailaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.locked != null" >
        LOCKED = #{record.locked,jdbcType=VARCHAR},
      </if>
      <if test="record.lastlogin != null" >
        LASTLOGIN = #{record.lastlogin,jdbcType=DATE},
      </if>
      <if test="record.lastpwdset != null" >
        LASTPWDSET = #{record.lastpwdset,jdbcType=DATE},
      </if>
      <if test="record.pwdexdate != null" >
        PWDEXDATE = #{record.pwdexdate,jdbcType=DATE},
      </if>
      <if test="record.createuserid != null" >
        CREATEUSERID = #{record.createuserid,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null" >
        CREATEDATE = #{record.createdate,jdbcType=DATE},
      </if>
      <if test="record.updateuserid != null" >
        UPDATEUSERID = #{record.updateuserid,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedate != null" >
        UPDATEDATE = #{record.updatedate,jdbcType=DATE},
      </if>
      <if test="record.owneruserid != null" >
        OWNERUSERID = #{record.owneruserid,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerdepartmentid != null" >
        OWNERDEPARTMENTID = #{record.ownerdepartmentid,jdbcType=VARCHAR},
      </if>
      <if test="record.im != null" >
        IM = #{record.im,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update SCUSERS
    set USERID = #{record.userID,jdbcType=VARCHAR},
      ORDERNO = #{record.orderNo,jdbcType=DECIMAL},
      USERNO = #{record.userno,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      DEPARTMENTID = #{record.departmentid,jdbcType=VARCHAR},
      EMPLOYEEID = #{record.employeeid,jdbcType=VARCHAR},
      PARTNERID = #{record.partnerid,jdbcType=VARCHAR},
      MOBILENUMBER = #{record.mobilenumber,jdbcType=VARCHAR},
      EMAILADDRESS = #{record.emailaddress,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      LOCKED = #{record.locked,jdbcType=VARCHAR},
      LASTLOGIN = #{record.lastlogin,jdbcType=DATE},
      LASTPWDSET = #{record.lastpwdset,jdbcType=DATE},
      PWDEXDATE = #{record.pwdexdate,jdbcType=DATE},
      CREATEUSERID = #{record.createuserid,jdbcType=VARCHAR},
      CREATEDATE = #{record.createdate,jdbcType=DATE},
      UPDATEUSERID = #{record.updateuserid,jdbcType=VARCHAR},
      UPDATEDATE = #{record.updatedate,jdbcType=DATE},
      OWNERUSERID = #{record.owneruserid,jdbcType=VARCHAR},
      OWNERDEPARTMENTID = #{record.ownerdepartmentid,jdbcType=VARCHAR},
      IM = #{record.im,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="mybatistest.entity.SCUser" >
    update SCUSERS
    <set >
      <if test="orderNo != null" >
        ORDERNO = #{orderNo,jdbcType=DECIMAL},
      </if>
      <if test="userno != null" >
        USERNO = #{userno,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null" >
        DEPARTMENTID = #{departmentid,jdbcType=VARCHAR},
      </if>
      <if test="employeeid != null" >
        EMPLOYEEID = #{employeeid,jdbcType=VARCHAR},
      </if>
      <if test="partnerid != null" >
        PARTNERID = #{partnerid,jdbcType=VARCHAR},
      </if>
      <if test="mobilenumber != null" >
        MOBILENUMBER = #{mobilenumber,jdbcType=VARCHAR},
      </if>
      <if test="emailaddress != null" >
        EMAILADDRESS = #{emailaddress,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="locked != null" >
        LOCKED = #{locked,jdbcType=VARCHAR},
      </if>
      <if test="lastlogin != null" >
        LASTLOGIN = #{lastlogin,jdbcType=DATE},
      </if>
      <if test="lastpwdset != null" >
        LASTPWDSET = #{lastpwdset,jdbcType=DATE},
      </if>
      <if test="pwdexdate != null" >
        PWDEXDATE = #{pwdexdate,jdbcType=DATE},
      </if>
      <if test="createuserid != null" >
        CREATEUSERID = #{createuserid,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        CREATEDATE = #{createdate,jdbcType=DATE},
      </if>
      <if test="updateuserid != null" >
        UPDATEUSERID = #{updateuserid,jdbcType=VARCHAR},
      </if>
      <if test="updatedate != null" >
        UPDATEDATE = #{updatedate,jdbcType=DATE},
      </if>
      <if test="owneruserid != null" >
        OWNERUSERID = #{owneruserid,jdbcType=VARCHAR},
      </if>
      <if test="ownerdepartmentid != null" >
        OWNERDEPARTMENTID = #{ownerdepartmentid,jdbcType=VARCHAR},
      </if>
      <if test="im != null" >
        IM = #{im,jdbcType=VARCHAR},
      </if>
    </set>
    where USERID = #{userID,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="mybatistest.entity.SCUser" >
    update SCUSERS
    set ORDERNO = #{orderNo,jdbcType=DECIMAL},
      USERNO = #{userno,jdbcType=VARCHAR},
      USERNAME = #{username,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      DEPARTMENTID = #{departmentid,jdbcType=VARCHAR},
      EMPLOYEEID = #{employeeid,jdbcType=VARCHAR},
      PARTNERID = #{partnerid,jdbcType=VARCHAR},
      MOBILENUMBER = #{mobilenumber,jdbcType=VARCHAR},
      EMAILADDRESS = #{emailaddress,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      LOCKED = #{locked,jdbcType=VARCHAR},
      LASTLOGIN = #{lastlogin,jdbcType=DATE},
      LASTPWDSET = #{lastpwdset,jdbcType=DATE},
      PWDEXDATE = #{pwdexdate,jdbcType=DATE},
      CREATEUSERID = #{createuserid,jdbcType=VARCHAR},
      CREATEDATE = #{createdate,jdbcType=DATE},
      UPDATEUSERID = #{updateuserid,jdbcType=VARCHAR},
      UPDATEDATE = #{updatedate,jdbcType=DATE},
      OWNERUSERID = #{owneruserid,jdbcType=VARCHAR},
      OWNERDEPARTMENTID = #{ownerdepartmentid,jdbcType=VARCHAR},
      IM = #{im,jdbcType=VARCHAR}
    where USERID = #{userID,jdbcType=VARCHAR}
  </update>
</mapper>